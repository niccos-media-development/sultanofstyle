{%- liquid
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign full_width = section.settings.full_width
  assign content_width = section.settings.content_width
  assign lazy = section.settings.lazy

  assign heading = section.settings.heading
  assign heading_size = section.settings.heading_size
  assign heading_size_mobile = section.settings.heading_size_mobile
  assign heading_color = section.settings.heading_color
  assign heading_custom = section.settings.heading_custom
  assign heading_font = section.settings.heading_font
  assign heading_height = section.settings.heading_height
  assign heading_align = section.settings.heading_align
  assign heading_align_mobile = section.settings.heading_align_mobile

  assign body_gap_mobile = section.settings.body_gap_mobile
  assign body_gap = section.settings.body_gap
  assign body_mt_mobile = section.settings.body_mt_mobile
  assign body_mt = section.settings.body_mt

  assign item_border_color = section.settings.item_border_color
  assign item_border_thickness = section.settings.item_border_thickness
  assign item_padding_bottom = section.settings.item_padding_bottom

  assign question_size = section.settings.question_size
  assign question_size_mobile = section.settings.question_size_mobile
  assign question_color = section.settings.question_color
  assign question_custom = section.settings.question_custom
  assign question_font = section.settings.question_font
  assign question_height = section.settings.question_height

  assign answer_size = section.settings.answer_size
  assign answer_size_mobile = section.settings.answer_size_mobile
  assign answer_color = section.settings.answer_color
  assign answer_custom = section.settings.answer_custom
  assign answer_font = section.settings.answer_font
  assign answer_height = section.settings.answer_height
  assign answer_padding_top = section.settings.answer_padding_top
-%}

{%- style -%}
    {{  heading_font | font_face: font_display: 'swap' }}
    {{  question_font | font_face: font_display: 'swap' }}
    {{  answer_font | font_face: font_display: 'swap' }}

    .section-{{ section.id }} {
      border-top: solid {{ border_color }} {{ border_thickness }}px;
      border-bottom: solid {{ border_color }} {{ border_thickness }}px;
      margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
      margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
    }

    .section-{{ section.id }}-settings {
      margin: 0 auto;
      padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
      padding-left: {{ padding_horizontal_mobile }}rem;
      padding-right: {{ padding_horizontal_mobile }}rem;
    }

    .faq-heading-{{ section.id }} {
      text-align: {{ heading_align_mobile }};
      font-family: "Cormorant Garamond";
      font-style: normal;
      font-weight: 500;
      line-height: 120%; 
      letter-spacing: -0.66px;
    }

    .faq-heading-{{ section.id }} * {
      margin: 0;
      font-size: {{ heading_size_mobile }}px;
      color: {{ heading_color }};
      line-height: {{ heading_height }}%;
      text-transform: unset;
    }

    .faq-body-{{ section.id }} {
      margin-top: 30px;
      display: grid;
      grid-template-columns: repeat(1, 1fr);
      align-items: start;
      gap: {{ body_gap_mobile }}px;
    }

    .faq-left-{{ section.id }},
    .faq-right-{{ section.id }} {
      display: grid;
      align-items: start;
      gap: {{ body_gap_mobile }}px;
      grid-template-columns: repeat(1, 1fr);
    }

    @media screen and (min-width:1024px) {
    .faq-left-{{ section.id }} {
      margin-right:50px;
    }
    }

    .faq-item-{{ section.id }} {
      position: relative;
      border-bottom: {{ item_border_thickness }}px solid {{ item_border_color }};
      padding-bottom: {{ item_padding_bottom | times: 0.75 | round: 0 }}px;
    }

    .faq-toggle-{{ section.id }} {
      display: flex;
      align-items: center;
      justify-content: space-between;
      cursor: pointer;
      gap: 12px;
    }

    .faq-toggle-{{ section.id }} {
      padding-top: 30px;
      padding-bottom: 30px;
      padding-left: 20px;
      padding-right: 20px;
      background: #FAF9F7;
      margin-bottom: 12px;
    }

    .faq-plus-{{ section.id }} {
      justify-content: center;
      align-items: center;
      margin-right: 0;
      display: flex !important;
      flex: 0 0 14px;
      height: 14px;
      position: relative;
      transform: rotate(var(--rotate));
      transition: all 0.25s ease 0s;
    }

    .faq-plus-l-{{ section.id }} {
      display: block !important;
      width: 2px;
      height: 100%;
      background-color: #000;
      border-radius: 3px;
      position: absolute;
      transition: all 0.25s ease 0s;
    }

    .faq-plus-m-{{ section.id }} {
      display: block !important;
      width: 100%;
      height: 2px;
      background-color: #000;
      border-radius: 3px;
    }

    .faq-question-{{ section.id }} {
      margin: 0px;
      font-size: {{ question_size_mobile }}px;
      color: {{ question_color }};
      line-height: {{ question_height }}%;
      text-transform: unset;
    }

    .faq-answer-{{ section.id }} {
      transition: all 0.3s ease-in-out;
      overflow: hidden;
      padding-top: 30px;
      padding-bottom: 30px;
      padding-left: 20px;
      padding-right: 20px;
    }

    .faq-answer-{{ section.id }} * {
      margin: 0px;
      font-size: {{ answer_size_mobile }}px;
      color: {{ answer_color }};
      line-height: {{ answer_height }}%;
      text-transform: unset;
    }

    .faq-answer-{{ section.id }} p {
      min-height: 10px;
    }

    .faq-answer-{{ section.id }} p:not(:first-child ) {
      margin-top: 10px;
    }

    .faq-height-cal-{{ section.id }} {
      visibility: hidden;
      opacity: 0;
      pointer-events: none;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      padding-top: {{ answer_padding_top }}px;
    }

    .faq-height-cal-{{ section.id }} * {
      margin: 0px;
      font-size: {{ answer_size_mobile }}px;
      color: {{ answer_color }};
      line-height: {{ answer_height }}%;
      text-transform: unset;
    }

    .faq-height-cal-{{ section.id }} p {
      min-height: 10px;
    }

    .faq-height-cal-{{ section.id }} p:not(:first-child ) {
      margin-top: 10px;
    }

   .faq-subheading {
color: var(--Farbe, #B8A189);
font-family: Lato;
font-size: 12px;
font-style: normal;
font-weight: 500;
line-height: normal;
letter-spacing: 0.36px;
text-transform: uppercase;
             margin-bottom: 10px;
      }

    @media(min-width: 1024px) {
     .faq-answer-{{ section.id }},.faq-toggle-{{ section.id }} {
      padding-left: 40px;
      padding-right: 40px;
    }

      .faq-subheading {
        color: var(--Farbe, #B8A189);
         margin-bottom: 9px;
  font-family: Lato;
  font-size: 14px;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
  letter-spacing: 0.42px;
  text-transform: uppercase;
      }

      .section-{{ section.id }} {
        margin-top: {{ margin_top }}px;
        margin-bottom: {{ margin_bottom }}px;
      }

      .section-{{ section.id }}-settings {
        padding: 0 5rem;
        padding-top: {{ padding_top }}px;
        padding-bottom: {{ padding_bottom }}px;
        padding-left: {{ padding_horizontal }}rem;
        padding-right: {{ padding_horizontal }}rem;
      }

      .faq-heading-{{ section.id }} {
        text-align: {{ heading_align }};
      }

      .faq-heading-{{ section.id }} * {
        font-size: {{ heading_size }}px;
      }

      .faq-body-{{ section.id }} {
        margin-top: 40px;
        gap: {{ body_gap }}px;
        grid-template-columns: repeat(2, 1fr);
      }

      .faq-left-{{ section.id }},
      .faq-right-{{ section.id }} {
        gap: {{ body_gap }}px;
      }

      .faq-item-{{ section.id }} {
        padding-bottom: {{ item_padding_bottom }}px;
      }

      .faq-question-{{ section.id }} {
        font-size: {{ question_size }}px;
      }

      .faq-answer-{{ section.id }} * {
        font-size: {{ answer_size }}px;
      }

      .faq-height-cal-{{ section.id }} * {
        font-size: {{ answer_size }}px;
      }
    }
{%- endstyle -%}

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: 1440px;
    }
  </style>
{% endunless %}

{% if heading_custom %}
  <style>
    .faq-heading-{{ section.id }} * {
      font-family: {{ heading_font.family }}, {{ heading_font.fallback_families }};
      font-weight: {{ heading_font.weight }};
      font-style: {{ heading_font.style }};
    }
  </style>
{% endif %}

{% if question_custom %}
  <style>
    .faq-question-{{ section.id }} {
      font-family: {{ question_font.family }}, {{ question_font.fallback_families }};
      font-weight: {{ question_font.weight }};
      font-style: {{ question_font.style }};
    }
  </style>
{% endif %}

{% if answer_custom %}
  <style>
    .faq-answer-{{ section.id }} * {
      font-family: {{ answer_font.family }}, {{ answer_font.fallback_families }};
      font-weight: {{ answer_font.weight }};
      font-style: {{ answer_font.style }};
    }
  </style>
{% endif %}

<div
  class="section-{{ section.id }} faq-{{ section.id }}"
  style="background-color:{{ background_color }}; background-image: {{ background_gradient }};"
>
  <div class="{% if section.settings.enable_container %}container container--{{ section.settings.content_width_container }}{% endif %}">
  <div class="section-{{ section.id }}-settings">
    <div class="faq-subheading">Häufig gestellte Fragen</div>
    {% if heading != blank %}
      <div class="faq-heading-{{ section.id }}">
        {{ heading }}
      </div>
    {% endif %}

    <div class="faq-body-{{ section.id }}">
      {% assign block_count = section.blocks.size %}
      {% assign half_block_count = block_count | times: 0.5 %}
      {% assign half_block_count = half_block_count | round: 0 %}
      <div class="faq-left-{{ section.id }}">
        {% for block in section.blocks %}
          {% if forloop.index <= half_block_count %}
            <div class="faq-item-{{ section.id }}">
              <div class="faq-toggle-{{ section.id }}">
                <p class="faq-question-{{ section.id }}">{{ block.settings.question }}</p>
                <div class="faq-plus-{{ section.id }}">
                  <div class="faq-plus-l-{{ section.id }}"></div>
                  <div class="faq-plus-m-{{ section.id }}"></div>
                </div>
              </div>
              <div
                class="faq-answer-{{ section.id }}"
                style="display: none; height: 0px; padding-top: 0px; padding-bottom: 0px;"
              >
                {{ block.settings.answer }}
              </div>
              <div class="faq-height-cal-{{ section.id }}">
                {{ block.settings.answer }}
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
      <div class="faq-right-{{ section.id }}">
        {% for block in section.blocks %}
          {% if forloop.index > half_block_count %}
            <div class="faq-item-{{ section.id }}">
              <div class="faq-toggle-{{ section.id }}">
                <p class="faq-question-{{ section.id }}">{{ block.settings.question }}</p>
                <div class="faq-plus-{{ section.id }}">
                  <div class="faq-plus-l-{{ section.id }}"></div>
                  <div class="faq-plus-m-{{ section.id }}"></div>
                </div>
              </div>
              <div
                class="faq-answer-{{ section.id }}"
                style="display: none; height: 0px; padding-top: 0px; padding-bottom: 0px;"
              >
                {{ block.settings.answer }}
              </div>
              <div class="faq-height-cal-{{ section.id }}">
                {{ block.settings.answer }}
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
</div>
</div>

<script>
  function initFAQ7() {
    const answerPaddingTop = {{ answer_padding_top }};
    const answerPaddingBottom = {{ answer_padding_top }}; // Set to the same as answerPaddingTop

    const faqs = document.querySelectorAll('.faq-item-{{ section.id }}');
    const buttons = document.querySelectorAll('.faq-toggle-{{ section.id }}');
    const answers = document.querySelectorAll('.faq-answer-{{ section.id }}');
    const answersHeightCalElements = document.querySelectorAll('.faq-height-cal-{{ section.id }}');
    const icons = document.querySelectorAll('.faq-plus-{{ section.id }}');

    let activeIndex = -1;

    function openAnswer(index) {
      const height = answersHeightCalElements[index].offsetHeight;

      answers[index].style.display = 'block';
      setTimeout(() => {
        answers[index].style.paddingTop = `${answerPaddingTop}px`;
        answers[index].style.paddingBottom = `${answerPaddingBottom}px`;
        answers[index].style.height = `${height}px`; // Set explicit height first
        setTimeout(() => {
          answers[index].style.height = 'auto'; // Transition to auto
        }, 10); // Short delay to allow the height to be set
        icons[index].style.setProperty('--rotate', '180deg');
      }, 10);
    }

    function closeAnswer(index) {
      const currentHeight = answers[index].offsetHeight;
      answers[index].style.height = `${currentHeight}px`; // Force height before collapse

      setTimeout(() => {
        answers[index].style.height = '0';
        answers[index].style.paddingTop = '0';
        answers[index].style.paddingBottom = '0';
        icons[index].style.setProperty('--rotate', '0deg');
        setTimeout(() => {
          answers[index].style.display = 'none';
        }, 300); // Delay to match transition duration
      }, 10); // Short delay to ensure styles are applied
    }

    function toggleAnswer(index) {
      if (answers[index].style.display === 'none' || answers[index].style.height === '0px') {
        openAnswer(index);
        activeIndex = index;
      } else {
        closeAnswer(index);
        activeIndex = -1;
      }
    }

    function closeAllAnswerBut(index) {
      answers.forEach((answer, i) => {
        if (i !== index) {
          closeAnswer(i);
        }
      });
    }

    buttons.forEach((button, index) => {
      button.addEventListener('click', () => {
        toggleAnswer(index);
        closeAllAnswerBut(index);
      });
    });

    let resizeTimer;
    window.addEventListener('resize', () => {
      clearTimeout(resizeTimer);
      resizeTimer = setTimeout(() => {
        if (activeIndex !== -1) {
          const height = answersHeightCalElements[activeIndex].offsetHeight;
          answers[activeIndex].style.height = `${height}px`;
          setTimeout(() => {
            answers[activeIndex].style.height = 'auto'; // Keep auto resize after window resize
          }, 10);
        }
      }, 250);
    });
  }

  document.addEventListener('DOMContentLoaded', initFAQ7);
  
  if (Shopify.designMode) {
    document.addEventListener('shopify:section:unload', initFAQ7);
    document.addEventListener('shopify:section:load', initFAQ7);
  }
</script>

{% schema %}
{
  "name": "Double FAQ",
  "settings": [
      {
      "type": "checkbox",
      "id": "enable_container",
      "label": "Enable Container",
      "default": true
    },
    {
      "type": "select",
      "id": "content_width_container",
      "label": "Section Width",
      "options": [
        {
          "value": "xs",
          "label": "t:global.sizes.x_small"
        },
        {
          "value": "sm",
          "label": "t:global.sizes.small"
        },
        {
          "value": "md",
          "label": "t:global.sizes.medium"
        },
        {
          "value": "lg",
          "label": "t:global.sizes.large"
        },
        {
          "value": " ",
          "label": "Fill Width"
        }
      ],
      "default": "sm"
    },
    {
      "type": "header",
      "content": "Heading Settings"
    },
    {
      "type": "richtext",
      "id": "heading",
      "label": "Heading",
      "default": "<p>FAQ</p>"
    },
    {
      "type": "checkbox",
      "id": "heading_custom",
      "label": "Use Custom Font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Heading Font Family",
      "default": "josefin_sans_n4"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Heading Size",
      "default": 38
    },
    {
      "type": "range",
      "id": "heading_size_mobile",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Heading Size - Mobile",
      "default": 28
    },
    {
      "type": "range",
      "id": "heading_height",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "%",
      "label": "Heading Line Height",
      "default": 130
    },
    {
      "type": "text_alignment",
      "id": "heading_align",
      "label": "Heading Text Align",
      "default": "center"
    },
    {
      "type": "text_alignment",
      "id": "heading_align_mobile",
      "label": "Heading Text Align - Mobile",
      "default": "center"
    },
    {
      "type": "header",
      "content": "Body Settings"
    },
    {
      "type": "range",
      "id": "body_gap",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Body Gap",
      "default": 30
    },
    {
      "type": "range",
      "id": "body_gap_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Body Gap - Mobile",
      "default": 20
    },
    {
      "type": "range",
      "id": "body_mt",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Body Margin Top",
      "default": 60
    },
    {
      "type": "range",
      "id": "body_mt_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Body Margin Top - Mobile",
      "default": 60
    },
    {
      "type": "header",
      "content": "Item Settings"
    },
    {
      "type": "range",
      "id": "item_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Item Padding Bottom",
      "default": 24
    },
    {
      "type": "range",
      "id": "item_border_thickness",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Item Border Thickness",
      "default": 1
    },
    {
      "type": "header",
      "content": "Question Settings"
    },
    {
      "type": "checkbox",
      "id": "question_custom",
      "label": "Use Custom Font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "question_font",
      "label": "Question Font Family",
      "default": "josefin_sans_n4"
    },
    {
      "type": "range",
      "id": "question_size",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Question Size",
      "default": 18
    },
    {
      "type": "range",
      "id": "question_size_mobile",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Question Size - Mobile",
      "default": 18
    },
    {
      "type": "range",
      "id": "question_height",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "%",
      "label": "Question Line Height",
      "default": 130
    },
    {
      "type": "header",
      "content": "Answer Settings"
    },
    {
      "type": "checkbox",
      "id": "answer_custom",
      "label": "Use Custom Font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "answer_font",
      "label": "Answer Font Family",
      "default": "josefin_sans_n4"
    },
    {
      "type": "range",
      "id": "answer_size",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Answer Size",
      "default": 16
    },
    {
      "type": "range",
      "id": "answer_size_mobile",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Answer Size - Mobile",
      "default": 16
    },
    {
      "type": "range",
      "id": "answer_height",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "%",
      "label": "Answer Line Height",
      "default": 150
    },
    {
      "type": "range",
      "id": "answer_padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Answer Padding Top",
      "default": 16
    },
    {
      "type": "header",
      "content": "Section Colors"
    },
    {
      "type": "color",
      "label": "Heading Color",
      "id": "heading_color",
      "default": "#837c5c"
    },
    {
      "type": "color",
      "label": "Item Border Color",
      "id": "item_border_color",
      "default": "#f0efe8"
    },
    {
      "type": "color",
      "label": "Question Color",
      "id": "question_color",
      "default": "#837c5c"
    },
    {
      "type": "color",
      "label": "Answer Color",
      "id": "answer_color",
      "default": "#837c5c"
    },
    {
      "type": "color",
      "label": "Section background",
      "id": "background_color"
    },
    {
      "type": "color_background",
      "id": "background_gradient",
      "label": "Section background gradient"
    },
    {
      "type": "color",
      "label": "Border",
      "id": "border_color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Section margin (outside)"
    },
    {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Margin top",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Margin bottom",
      "default": 0
    },
    {
      "type": "header",
      "content": "Section padding (inside)"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding top",
      "default": 36
    },
    {
       "type": "range",
       "id": "padding_bottom",
       "min": 0,
       "max": 100,
       "step": 4,
       "unit": "px",
       "label": "Padding bottom",
       "default": 36
    },
    {
      "type": "range",
      "id": "padding_horizontal",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "rem",
      "label": "Padding sides",
      "default": 5
    },
    {
      "type": "range",
      "id": "padding_horizontal_mobile",
      "min": 0,
      "max": 15,
      "step": 0.5,
      "unit": "rem",
      "label": "Padding sides mobile",
      "default": 1.5
    },
    {
      "type": "header",
      "content": "Section Settings"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full Width",
      "default": false
    },
    {
      "type": "range",
      "id": "content_width",
      "min": 0,
      "max": 400,
      "step": 10,
      "unit": "rem",
      "label": "Section content width",
      "default": 140
    },
    {
      "type": "range",
      "id": "border_thickness",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Border thickness",
      "default": 0
    },
    {
      "type": "checkbox",
      "id": "lazy",
      "label": "Lazy load",
      "info": "Lazy load images for speed optimisation",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "item",
      "name": "Item",
      "settings": [
        {
          "type": "text",
          "id": "question",
          "label": "Question",
          "default": "Question"
        },
        {
          "type": "richtext",
          "id": "answer",
          "label": "Answer",
          "default": "<p>Answer</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Double FAQ",
      "blocks": [
        {
          "type": "item",
          "settings": {
            "question": "How Do I Charge The Lamps?",
            "answer": "<p><strong>Inside the box you will receive a USB cable together with the lamp.<br><br>To charge the lamp you will simply need to plug the cable to the lamp and connect it with any charger adapter you already have at home.<br><br>You can use any type of adapter: for example of smartphone, computer etc.<br><br>No matter in which country you are based. Simply use the adapters you already have. </strong></p>"
          }
        },
        {
          "type": "item",
          "settings": {
            "question": "How Do I Charge Multiple Lamps At Once?",
            "answer": "<p><strong>You can charge multiple lamps using a USB multi-port socket or a multi-port charger. <br><br>You can find them on Amazon or any other specialized shop. <br><br>Upon request if you have ordered a MOQ we can provide a multi-port charger that will allow you to charge up to 10 lamps at once.</strong></p>"
          }
        },
        {
          "type": "item",
          "settings": {
            "question": "Light Intensity Of The Lamp Is Very Low, Is It Broken?",
            "answer": "<p><strong>The lamp is not broken !<br><br>All our lamps are dimmable by touching the top or the base of the lamp depending on the model. <br><br>If you have a low intensity please touch the lamp at the top or at the base and hold the finger a few seconds until  light intensity will increase. <br><br>If you then touch again the lamp and hold, the light intensity will decrease.</strong></p>"
          }
        },
        {
          "type": "item",
          "settings": {
            "question": "How Long Does The Shipping Take?",
            "answer": "<p><strong>Shipping time is 4–9 business days (Monday–Friday) to United States.</strong></p>"
          }
        },
        {
          "type": "item",
          "settings": {
            "question": "How Long For A Fully Charged Battery?",
            "answer": "<p><strong>In order to have a fully charged battery our lamps require approximately 4-5 hours of charge.</strong></p>"
          }
        }
      ]
    }
  ]
}
{% endschema %}
